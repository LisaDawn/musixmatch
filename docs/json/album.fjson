{"body": "<div class=\"section\" id=\"module-musixmatch.album\">\n<span id=\"album-module\"></span><h1>6. album module<a class=\"headerlink\" href=\"#module-musixmatch.album\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This module contains higher level classes to query Musixmatch API and build\nsimple dictionary-like objects representing an Album or an AlbumsCollection.</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">musixmatch.album</span> <span class=\"kn\">import</span> <span class=\"n\">Album</span><span class=\"p\">,</span> <span class=\"n\">AlbumsCollection</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">musixmatch.api</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">album</span> <span class=\"o\">=</span> <span class=\"n\">Album</span><span class=\"p\">(</span><span class=\"n\">album_id</span><span class=\"o\">=</span><span class=\"mi\">292</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">collection</span> <span class=\"o\">=</span> <span class=\"n\">AlbumsCollection</span><span class=\"o\">.</span><span class=\"n\">fromArtist</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s\">&#39;it&#39;</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"k\">except</span> <span class=\"n\">musixmatch</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<dl class=\"class\">\n<dt id=\"musixmatch.album.Album\">\n<em class=\"property\">class </em><tt class=\"descname\">Album</tt><big>(</big><em>dictionary=None</em>, <em>**keywords</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.album.Album\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../base/#musixmatch.base.Item\" title=\"musixmatch.base.Item\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.base.Item</span></tt></a></p>\n<p>This class build a <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt> like object representing an album. It\ncan get album information through the <a class=\"reference internal\" href=\"../api/#musixmatch.api.Method\" title=\"musixmatch.api.Method\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.api.Method</span></tt></a>\n<strong>album.get</strong> or from an already well-formed <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt>. Create an\nAlbum object based on a given keyword argument:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>album_id</strong> &#8211; musiXmatch album ID</li>\n<li><strong>album_data</strong> &#8211; an already well-formed <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt> of album data.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Once information are collected, the following keys are available:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>album_id</strong> &#8211; musiXmatch album ID</li>\n<li><strong>album_name</strong> &#8211; album name</li>\n<li><strong>album_release_date</strong> &#8211; album release date</li>\n<li><strong>album_release_type</strong> &#8211; type of the album</li>\n<li><strong>album_coverart_100x100</strong> &#8211; coverart URL</li>\n<li><strong>artist_id</strong> &#8211; album artist musiXmatch ID</li>\n<li><strong>artist_name</strong> &#8211; album artist name</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"musixmatch.album.AlbumsCollection\">\n<em class=\"property\">class </em><tt class=\"descname\">AlbumsCollection</tt><big>(</big><em>*items</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.album.AlbumsCollection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../base/#musixmatch.base.ItemsCollection\" title=\"musixmatch.base.ItemsCollection\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.base.ItemsCollection</span></tt></a></p>\n<p>This class build a <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt> like object representing an albums\ncollection. It accepts <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt> or <a class=\"reference internal\" href=\"#musixmatch.album.Album\" title=\"musixmatch.album.Album\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Album</span></tt></a> objects.</p>\n<dl class=\"classmethod\">\n<dt id=\"musixmatch.album.AlbumsCollection.fromArtist\">\n<em class=\"property\">classmethod </em><tt class=\"descname\">fromArtist</tt><big>(</big><em>**keywords</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.album.AlbumsCollection.fromArtist\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This classmethod builds an <a class=\"reference internal\" href=\"#musixmatch.album.AlbumsCollection\" title=\"musixmatch.album.AlbumsCollection\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">AlbumsCollection</span></tt></a> from a\n<strong>artist.albums.get</strong> <a class=\"reference internal\" href=\"../api/#musixmatch.api.Method\" title=\"musixmatch.api.Method\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.api.Method</span></tt></a> call.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>artist_id</strong> &#8211; album artist musiXmatch ID</li>\n<li><strong>g_album_name</strong> &#8211; group albums by name</li>\n<li><strong>s_release_date</strong> &#8211; sort albums by release date</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Return type:</th><td class=\"field-body\"><p class=\"first last\"><a class=\"reference internal\" href=\"#musixmatch.album.AlbumsCollection\" title=\"musixmatch.album.AlbumsCollection\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">AlbumsCollection</span></tt></a></p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "display_toc": false, "title": "6. album module", "sourcename": "album.txt", "customsidebar": null, "current_page_name": "album", "next": {"link": "../lyrics/", "title": "7. lyrics module"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["lyrics", "7. lyrics module", "N", "next"], ["track", "5. track module", "P", "previous"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">6. album module</a></li>\n</ul>\n", "prev": {"link": "../track/", "title": "5. track module"}, "metatags": ""}