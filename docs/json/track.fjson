{"body": "<div class=\"section\" id=\"module-musixmatch.track\">\n<span id=\"track-module\"></span><h1>5. track module<a class=\"headerlink\" href=\"#module-musixmatch.track\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This module contains higher level classes to query Musixmatch API and build\nsimple dictionary-like objects representing a Track or a TracksCollection.</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">musixmatch.track</span> <span class=\"kn\">import</span> <span class=\"n\">Track</span><span class=\"p\">,</span> <span class=\"n\">TracksCollection</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">musixmatch.api</span>\n<span class=\"gp\">&gt;&gt;&gt; </span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">track</span> <span class=\"o\">=</span> <span class=\"n\">Track</span><span class=\"p\">(</span><span class=\"n\">track_mbid</span><span class=\"o\">=</span><span class=\"mi\">8976</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">collection</span> <span class=\"o\">=</span> <span class=\"n\">TracksCollection</span><span class=\"o\">.</span><span class=\"n\">fromChart</span><span class=\"p\">(</span><span class=\"n\">country</span><span class=\"o\">=</span><span class=\"s\">&#39;us&#39;</span><span class=\"p\">,</span> <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span><span class=\"k\">except</span> <span class=\"n\">musixmatch</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Error</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"k\">pass</span>\n</pre></div>\n</div>\n<dl class=\"class\">\n<dt id=\"musixmatch.track.Track\">\n<em class=\"property\">class </em><tt class=\"descname\">Track</tt><big>(</big><em>dictionary=None</em>, <em>**keywords</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.Track\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../base/#musixmatch.base.Item\" title=\"musixmatch.base.Item\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.base.Item</span></tt></a></p>\n<p>This class builds a <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt> like object representing a track. It\ncan get track information through the <a class=\"reference internal\" href=\"../api/#musixmatch.api.Method\" title=\"musixmatch.api.Method\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.api.Method</span></tt></a>\n<strong>track.get</strong> or from an already well-formed <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt>. Create a\nTrack object based on a given keyword argument:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first simple\">\n<li><strong>track_id</strong> &#8211; musiXmatch track ID</li>\n<li><strong>musicbrainz_id</strong> &#8211; Musicbrainz track ID</li>\n<li><strong>track_echonest_id</strong> &#8211; Echonest track ID</li>\n<li><strong>track_data</strong> &#8211; an already well-formed <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt> of track data</li>\n</ul>\n</td>\n</tr>\n<tr class=\"field\"><th class=\"field-name\">Raises :</th><td class=\"field-body\"><p class=\"first last\"><a class=\"reference internal\" href=\"../api/#musixmatch.api.Error\" title=\"musixmatch.api.Error\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">musixmatch.api.Error</span></tt></a> if <a class=\"reference internal\" href=\"../api/#musixmatch.api.ResponseStatusCode\" title=\"musixmatch.api.ResponseStatusCode\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.api.ResponseStatusCode</span></tt></a> is not 200</p>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Once information are collected, the following keys are available:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>track_id</strong> &#8211; musiXmatch track ID</li>\n<li><strong>track_mbid</strong> &#8211; Musicbrainz track ID</li>\n<li><strong>lyrics_id</strong> &#8211; musiXmatch lyrics ID</li>\n<li><strong>instrumental</strong> &#8211; wether the track is instrumental or not</li>\n<li><strong>subtitle_id</strong> &#8211; musiXmatch subtitle ID</li>\n<li><strong>track_name</strong> &#8211; track name</li>\n<li><strong>album_coverart_100x100</strong> &#8211; album cover URL</li>\n<li><strong>artist_id</strong> &#8211; musiXmatch artist ID</li>\n<li><strong>artist_mbid</strong> &#8211; Musicbrainz artist ID</li>\n<li><strong>artist_name</strong> &#8211; artist name</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<p>Keyword access have been overloaded thanks to the <a class=\"reference internal\" href=\"#musixmatch.track.Track.get\" title=\"musixmatch.track.Track.get\"><tt class=\"xref py py-meth docutils literal\"><span class=\"pre\">get()</span></tt></a> method\nwhich will eventually fetch the matching lyrics or subtitle.</p>\n<dl class=\"classmethod\">\n<dt id=\"musixmatch.track.Track.fromMatcher\">\n<em class=\"property\">classmethod </em><tt class=\"descname\">fromMatcher</tt><big>(</big><em>**keywords</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.Track.fromMatcher\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Returns a <a class=\"reference internal\" href=\"#musixmatch.track.Track\" title=\"musixmatch.track.Track\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Track</span></tt></a> based on the result of the\n<tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musiXmatch.api.Method</span></tt> <strong>matcher.track.get</strong>. Accepts the\nfollowing keywords:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>q_track</strong> &#8211; words to be searched among track titles</li>\n<li><strong>q_artist</strong> &#8211; words to be searched among artist names</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"musixmatch.track.Track.get\">\n<tt class=\"descname\">get</tt><big>(</big><em>key</em>, <em>default=&lt;object object at 0x7fa5e1db2d20&gt;</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.Track.get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>If key is <em>lyrics</em> or <em>subtitle</em> try to query api for proper value,\nand build an <a class=\"reference internal\" href=\"../lyrics/#musixmatch.lyrics.Lyrics\" title=\"musixmatch.lyrics.Lyrics\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.lyrics.Lyrics</span></tt></a> or\n<a class=\"reference internal\" href=\"../subtitle/#musixmatch.subtitle.Subtitle\" title=\"musixmatch.subtitle.Subtitle\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.subtitle.Subtitle</span></tt></a>. Access to the above mentioned\nkeys may fail with <a class=\"reference internal\" href=\"../api/#musixmatch.api.Error\" title=\"musixmatch.api.Error\"><tt class=\"xref py py-exc docutils literal\"><span class=\"pre\">musixmatch.api.Error</span></tt></a>. Once fetched, the\nresult is saved.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"musixmatch.track.Track.postFeedback\">\n<tt class=\"descname\">postFeedback</tt><big>(</big><em>feedback</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.Track.postFeedback\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Post feedback about lyrics for this track. <strong>feedback</strong> can be one of:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>wrong_attribution</strong> &#8211; the lyrics shown are not by the artist that\nI selected.</li>\n<li><strong>bad_characters</strong> &#8211; there are strange characters and/or words\nthat are partially scrambled.</li>\n<li><strong>lines_too_long</strong> &#8211; the text for each verse is too long!</li>\n<li><strong>wrong_verses</strong> &#8211; there are some verses missing from the\nbeginning or at the end.</li>\n<li><strong>wrong_formatting</strong> &#8211; the text looks horrible, please fix it!</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"musixmatch.track.TracksCollection\">\n<em class=\"property\">class </em><tt class=\"descname\">TracksCollection</tt><big>(</big><em>*items</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.TracksCollection\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <a class=\"reference internal\" href=\"../base/#musixmatch.base.ItemsCollection\" title=\"musixmatch.base.ItemsCollection\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.base.ItemsCollection</span></tt></a></p>\n<p>This class build a <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></tt> like object representing a tracks\ncollection. It accepts <tt class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></tt> or <a class=\"reference internal\" href=\"#musixmatch.track.Track\" title=\"musixmatch.track.Track\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">Track</span></tt></a> objects.</p>\n<dl class=\"classmethod\">\n<dt id=\"musixmatch.track.TracksCollection.fromAlbum\">\n<em class=\"property\">classmethod </em><tt class=\"descname\">fromAlbum</tt><big>(</big><em>**keywords</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.TracksCollection.fromAlbum\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This classmethod builds an <a class=\"reference internal\" href=\"#musixmatch.track.TracksCollection\" title=\"musixmatch.track.TracksCollection\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">TracksCollection</span></tt></a> from a\n<strong>album.tracks.get</strong> <a class=\"reference internal\" href=\"../api/#musixmatch.api.Method\" title=\"musixmatch.api.Method\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.api.Method</span></tt></a> call.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><strong>album_id</strong> &#8211; musiXmatch album ID</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"musixmatch.track.TracksCollection.fromSearch\">\n<em class=\"property\">classmethod </em><tt class=\"descname\">fromSearch</tt><big>(</big><em>**keywords</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.TracksCollection.fromSearch\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This classmethod builds an <a class=\"reference internal\" href=\"#musixmatch.track.TracksCollection\" title=\"musixmatch.track.TracksCollection\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">TracksCollection</span></tt></a> from a\n<strong>track.search</strong> <a class=\"reference internal\" href=\"../api/#musixmatch.api.Method\" title=\"musixmatch.api.Method\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.api.Method</span></tt></a> call.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>q</strong> &#8211; a string that will be searched in every data field\n(q_track, q_artist, q_lyrics)</li>\n<li><strong>q_track</strong> &#8211; words to be searched among track titles</li>\n<li><strong>q_artist</strong> &#8211; words to be searched among artist names</li>\n<li><strong>q_track_artist</strong> &#8211; words to be searched among track titles or\nartist names</li>\n<li><strong>q_lyrics</strong> &#8211; words to be searched into the lyrics</li>\n<li><strong>page</strong> &#8211; requested page of results</li>\n<li><strong>page_size</strong> &#8211; desired number of items per result page</li>\n<li><strong>f_has_lyrics</strong> &#8211; exclude tracks without an available lyrics\n(automatic if q_lyrics is set)</li>\n<li><strong>f_artist_id</strong> &#8211; filter the results by the artist_id</li>\n<li><strong>f_artist_mbid</strong> &#8211; filter the results by the artist_mbid</li>\n<li><strong>quorum_factor</strong> &#8211; only works together with q and q_track_artist\nparameter. Possible values goes from 0.1 to\n0.9. A value of 0.9 means: &#8216;match at least 90\npercent of the words&#8217;.</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n<dl class=\"classmethod\">\n<dt id=\"musixmatch.track.TracksCollection.fromChart\">\n<em class=\"property\">classmethod </em><tt class=\"descname\">fromChart</tt><big>(</big><em>**keywords</em><big>)</big><a class=\"headerlink\" href=\"#musixmatch.track.TracksCollection.fromChart\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This classmethod builds an <a class=\"reference internal\" href=\"#musixmatch.track.TracksCollection\" title=\"musixmatch.track.TracksCollection\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">TracksCollection</span></tt></a> from a\n<strong>track.chart.get</strong> <a class=\"reference internal\" href=\"../api/#musixmatch.api.Method\" title=\"musixmatch.api.Method\"><tt class=\"xref py py-class docutils literal\"><span class=\"pre\">musixmatch.api.Method</span></tt></a> call.</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field\"><th class=\"field-name\">Parameters:</th><td class=\"field-body\"><ul class=\"first last simple\">\n<li><strong>page</strong> &#8211; requested page of results</li>\n<li><strong>page_size</strong> &#8211; desired number of items per result page</li>\n<li><strong>country</strong> &#8211; the country code of the desired country chart</li>\n<li><strong>f_has_lyrics</strong> &#8211; exclude tracks without an available lyrics\n(automatic if q_lyrics is set)</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n", "display_toc": false, "title": "5. track module", "sourcename": "track.txt", "customsidebar": null, "current_page_name": "track", "next": {"link": "../album/", "title": "6. album module"}, "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["album", "6. album module", "N", "next"], ["artist", "4. artist module", "P", "previous"]], "meta": {}, "parents": [], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">5. track module</a></li>\n</ul>\n", "prev": {"link": "../artist/", "title": "4. artist module"}, "metatags": ""}